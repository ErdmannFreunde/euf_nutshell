// *
// * Erdmann & Freunde - Nutshell
// * BASE Contao Framework
// * erdmann-freunde.de/nutshell/
// *
// * Lizenziert unter MIT OPEN SOURCE 
// *

//
// BASE/GRID
// --------------------------------------------------

// VARIABLES
html {
--grid__columns:       12;
--grid__gutter:        1.875rem; // 30px
}

$grid__columns:         12 !default;

// USED FROM _responsive.scss
// $breakpoints

// --------------------------------------------------

// general row-class
.row {
  display: grid;
  grid-template-columns: repeat(var(--grid__columns), 1fr);
  grid-gap: var(--grid__gutter);
  grid-auto-columns: 1fr;
  grid-auto-flow: row dense;
}

// [1] length($breakpoints) - go through length of available viewports (xs, sm, md, lg, xl == 5)
// [2] $current - actual viewport (e.g. "xs")
// [3] $i - counter, returns the actual grid-column
// [4] var(--grid__columns) - go through available columns (e.g. 1 --> 12)

// [5] override clear- class for the next viewport by default
// this means, you can add a clear-xs class to an element, but the clear will only affect the current viewport.  
@for $size from 1 through length($breakpoints) { // [1]
  $x:   nth($breakpoints, $size); // [2]
  $current:   nth($x, 1); // [2]
  
  // width creation for every col- class
  @include media-query(screen-#{$current}) { // [2]

  	@for $i from 1 through $grid__columns { // [3][4]
  		.col-#{$current}-#{$i} { // [2][3]
  			grid-column: span $i / span $i;
  		}
  	}
  }
  
  // .col-start and .row-start creation
  @include media-query(screen-#{$current}) { // [2]
  
  	@for $i from 1 through $grid__columns { // [3]
  		.col-start-#{$current}-#{$i} { // [2][3]
  			grid-column-start: $i;
  		}
  		.row-start-#{$current}-#{$i} { // [2][3]
  			grid-row-start: $i;
  		}
  	}
  }
  
  //pull-left & -right creation
  @include media-query(screen-#{$current}) { // [2]
    .pull-right-#{$current} { // [2]
      grid-column-end: -1;
    }
    
    .pull-left-#{$current} { // [2]
      grid-column-start: 1;
      grid-row-start: 1;
      grid-column-end: inherit;
    }
  }
  
  //clear creation  
  @include media-query(screen-#{$current}) { // [2]
    .clear-#{$current} { // [2]
      clear: both;
    }
  }
  
  // [5]
  @if($size < length($breakpoints)) {
    $size: $size + 1;
    $x:   nth($breakpoints, $size);
    $next:      nth($x, 1);
    
    // clear-#{$next}
    @include media-query(screen-#{$next}) {
      .clear-#{$current} {
        clear: none;
      }
    }
  }
}
